<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.example.book.service.BookServiceTest" tests="4" skipped="0" failures="0" errors="0" timestamp="2022-11-07T14:05:28" hostname="gimnamhyeon-ui-MacBookAir.local" time="0.057">
  <properties/>
  <testcase name="책 수정" classname="com.example.book.service.BookServiceTest" time="0.021"/>
  <testcase name="책 삭제" classname="com.example.book.service.BookServiceTest" time="0.005"/>
  <testcase name="책 등록" classname="com.example.book.service.BookServiceTest" time="0.013"/>
  <testcase name="책 리스트 조회" classname="com.example.book.service.BookServiceTest" time="0.015"/>
  <system-out><![CDATA[2022-11-07 23:05:28 INFO  [org.springframework.test.context.support.DefaultTestContextBootstrapper] - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener] 
2022-11-07 23:05:28 INFO  [org.springframework.test.context.support.DefaultTestContextBootstrapper] - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener] 
2022-11-07 23:05:28 INFO  [org.springframework.test.context.support.DefaultTestContextBootstrapper] - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@34b9eb03, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@43fda8d9, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@49d831c2, org.springframework.test.context.support.DirtiesContextTestExecutionListener@53a7a60c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@28bdbe88, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6a87026, org.springframework.test.context.event.EventPublishingTestExecutionListener@ef60710] 
2022-11-07 23:05:28 INFO  [org.springframework.test.context.support.DefaultTestContextBootstrapper] - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@34b9eb03, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@43fda8d9, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@49d831c2, org.springframework.test.context.support.DirtiesContextTestExecutionListener@53a7a60c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@28bdbe88, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6a87026, org.springframework.test.context.event.EventPublishingTestExecutionListener@ef60710] 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.getAutoCommit() returned true  com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java:-1) 
2022-11-07 23:05:28 DEBUG [org.mariadb.jdbc.client.impl.StandardClient] - execute query: set autocommit=0 
2022-11-07 23:05:28 DEBUG [org.mariadb.jdbc.message.server.OkPacket] - System variable change:  autocommit = OFF 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.setAutoCommit(false) returned   com.zaxxer.hikari.pool.ProxyConnection.setAutoCommit(ProxyConnection.java:401) 
2022-11-07 23:05:28 INFO  [org.springframework.test.context.transaction.TransactionContext] - Began transaction (1) for test context [DefaultTestContext@606f81b5 testClass = BookServiceTest, testInstance = com.example.book.service.BookServiceTest@5e1fc42f, testMethod = updateBookTest@BookServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b21f9f testClass = BookServiceTest, locations = '{file:src/main/webapp/WEB-INF/spring/root-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@a66e580]; rollback [true] 
2022-11-07 23:05:28 INFO  [org.springframework.test.context.transaction.TransactionContext] - Began transaction (1) for test context [DefaultTestContext@606f81b5 testClass = BookServiceTest, testInstance = com.example.book.service.BookServiceTest@5e1fc42f, testMethod = updateBookTest@BookServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b21f9f testClass = BookServiceTest, locations = '{file:src/main/webapp/WEB-INF/spring/root-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@a66e580]; rollback [true] 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Creating a new SqlSession 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ee8130e] 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.getAutoCommit() returned false  com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java:-1) 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.transaction.SpringManagedTransaction] - JDBC Connection [HikariProxyConnection@1116264846 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@174e1b69] will be managed by Spring 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.selectOne] - ==>  Preparing: select * from book where bno = 1 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.new PreparedStatement returned   com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.prepareStatement(select * from book where bno = 1) returned net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy@169268a7  com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327) 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.selectOne] - ==> Parameters:  
2022-11-07 23:05:28 DEBUG [jdbc.sqlonly] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)1. select * from book where bno = 1  
2022-11-07 23:05:28 DEBUG [org.mariadb.jdbc.client.impl.StandardClient] - execute query: select * from book where bno = 1 
2022-11-07 23:05:28 DEBUG [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)1. select * from book where bno = 1  {executed in 0 msec} 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.execute() returned true  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.new ResultSet returned   com.zaxxer.hikari.pool.ProxyStatement.getResultSet(ProxyStatement.java:213) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.getResultSet() returned net.sf.log4jdbc.sql.jdbcapi.ResultSetSpy@326d27ac  com.zaxxer.hikari.pool.ProxyStatement.getResultSet(ProxyStatement.java:213) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getMetaData() returned org.mariadb.jdbc.client.result.ResultSetMetaData@4d499d65  com.zaxxer.hikari.pool.HikariProxyResultSet.getMetaData(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getType() returned 1003  com.zaxxer.hikari.pool.HikariProxyResultSet.getType(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.isClosed() returned false  com.zaxxer.hikari.pool.HikariProxyResultSet.isClosed(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.next() returned true  com.zaxxer.hikari.pool.HikariProxyResultSet.next(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getLong(bno) returned 1  com.zaxxer.hikari.pool.HikariProxyResultSet.getLong(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(isbn) returned 8932118388  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(title) returned 님·밤 - 최민순 신부 시집  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getDate(pubDate) returned 2022-12-08  com.zaxxer.hikari.pool.HikariProxyResultSet.getDate(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(author) returned 최민순 (지은이)  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(description) returned   com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getInt(price) returned 18000  com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getInt(stock) returned 830  com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(cover) returned https://image.aladin.co.kr/product/30443/38/cover/8932118388_1.jpg  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(publisher) returned 가톨릭출판사  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.isClosed() returned false  com.zaxxer.hikari.pool.HikariProxyResultSet.isClosed(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 INFO  [jdbc.resultsettable] - |----|-----------|----------------|-----------|----------|------------|------|--------|------|-------------------------------------------------------------------|----------|------------|----------------------||bno |isbn       |title           |pubdate    |author    |description |price |mileage |stock |cover                                                              |publisher |update_date |reg_date              ||----|-----------|----------------|-----------|----------|------------|------|--------|------|-------------------------------------------------------------------|----------|------------|----------------------||1   |8932118388 |님·밤 - 최민순 신부 시집 |2022-12-08 |최민순 (지은이) |            |18000 |1800    |830   |https://image.aladin.co.kr/product/30443/38/cover/8932118388_1.jpg |가톨릭출판사    |[null]      |2022-11-06 15:16:15.0 ||----|-----------|----------------|-----------|----------|------------|------|--------|------|-------------------------------------------------------------------|----------|------------|----------------------| 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.next() returned false  com.zaxxer.hikari.pool.HikariProxyResultSet.next(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.selectOne] - <==      Total: 1 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.close() returned void  com.zaxxer.hikari.pool.HikariProxyResultSet.close(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.getMetaData() returned org.mariadb.jdbc.DatabaseMetaData@313f8301  com.zaxxer.hikari.pool.ProxyConnection.getMetaData(ProxyConnection.java:370) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.getMoreResults() returned false  com.zaxxer.hikari.pool.HikariProxyPreparedStatement.getMoreResults(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.getUpdateCount() returned -1  com.zaxxer.hikari.pool.HikariProxyPreparedStatement.getUpdateCount(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.close() returned   com.zaxxer.hikari.pool.ProxyStatement.close(ProxyStatement.java:75) 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ee8130e] 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ee8130e] from current transaction 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.updateBook] - ==>  Preparing: update book set price = ? ,stock = ? ,cover = ?, update_date = now() where bno = ? 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.new PreparedStatement returned   com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.prepareStatement(update book        set price =  ? ,stock = ? ,cover = ?, update_date = now()        where bno = ?) returned net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy@404db674  com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.setInt(1, 10000) returned   com.zaxxer.hikari.pool.HikariProxyPreparedStatement.setInt(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.setInt(2, 0) returned   com.zaxxer.hikari.pool.HikariProxyPreparedStatement.setInt(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.setString(3, "https://image.aladin.co.kr/product/30443/38/cover/8932118388_1.jpg") returned   com.zaxxer.hikari.pool.HikariProxyPreparedStatement.setString(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.setLong(4, 1) returned   com.zaxxer.hikari.pool.HikariProxyPreparedStatement.setLong(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.updateBook] - ==> Parameters: 10000(Integer), 0(Integer), https://image.aladin.co.kr/product/30443/38/cover/8932118388_1.jpg(String), 1(Long) 
2022-11-07 23:05:28 DEBUG [jdbc.sqlonly] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)1. update book set price = 10000 ,stock = 0 ,cover = 'https://image.aladin.co.kr/product/30443/38/cover/8932118388_1.jpg', update_date = now() where bno = 1  
2022-11-07 23:05:28 DEBUG [org.mariadb.jdbc.client.impl.StandardClient] - execute query: update book        set price =  ? ,stock = ? ,cover = ?, update_date = now()        where bno = ? 
2022-11-07 23:05:28 DEBUG [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)1. update book set price = 10000 ,stock = 0 ,cover = 'https://image.aladin.co.kr/product/30443/38/cover/8932118388_1.jpg', update_date = now() where bno = 1  {executed in 1 msec} 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.execute() returned false  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.getUpdateCount() returned 1  com.zaxxer.hikari.pool.HikariProxyPreparedStatement.getUpdateCount(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.updateBook] - <==    Updates: 1 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.close() returned   com.zaxxer.hikari.pool.ProxyStatement.close(ProxyStatement.java:75) 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ee8130e] 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ee8130e] from current transaction 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.selectOne] - ==>  Preparing: select * from book where bno = 1 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.new PreparedStatement returned   com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.prepareStatement(select * from book where bno = 1) returned net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy@50f097b5  com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327) 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.selectOne] - ==> Parameters:  
2022-11-07 23:05:28 DEBUG [jdbc.sqlonly] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)1. select * from book where bno = 1  
2022-11-07 23:05:28 DEBUG [org.mariadb.jdbc.client.impl.StandardClient] - execute query: select * from book where bno = 1 
2022-11-07 23:05:28 DEBUG [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)1. select * from book where bno = 1  {executed in 0 msec} 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.execute() returned true  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.new ResultSet returned   com.zaxxer.hikari.pool.ProxyStatement.getResultSet(ProxyStatement.java:213) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.getResultSet() returned net.sf.log4jdbc.sql.jdbcapi.ResultSetSpy@7add838c  com.zaxxer.hikari.pool.ProxyStatement.getResultSet(ProxyStatement.java:213) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getMetaData() returned org.mariadb.jdbc.client.result.ResultSetMetaData@3662bdff  com.zaxxer.hikari.pool.HikariProxyResultSet.getMetaData(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getType() returned 1003  com.zaxxer.hikari.pool.HikariProxyResultSet.getType(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.isClosed() returned false  com.zaxxer.hikari.pool.HikariProxyResultSet.isClosed(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.next() returned true  com.zaxxer.hikari.pool.HikariProxyResultSet.next(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getLong(bno) returned 1  com.zaxxer.hikari.pool.HikariProxyResultSet.getLong(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(isbn) returned 8932118388  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(title) returned 님·밤 - 최민순 신부 시집  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getDate(pubDate) returned 2022-12-08  com.zaxxer.hikari.pool.HikariProxyResultSet.getDate(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(author) returned 최민순 (지은이)  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(description) returned   com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getInt(price) returned 10000  com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getInt(stock) returned 0  com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.wasNull() returned false  com.zaxxer.hikari.pool.HikariProxyResultSet.wasNull(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(cover) returned https://image.aladin.co.kr/product/30443/38/cover/8932118388_1.jpg  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(publisher) returned 가톨릭출판사  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.isClosed() returned false  com.zaxxer.hikari.pool.HikariProxyResultSet.isClosed(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 INFO  [jdbc.resultsettable] - |----|-----------|----------------|-----------|----------|------------|------|--------|------|-------------------------------------------------------------------|----------|----------------------|----------------------||bno |isbn       |title           |pubdate    |author    |description |price |mileage |stock |cover                                                              |publisher |update_date           |reg_date              ||----|-----------|----------------|-----------|----------|------------|------|--------|------|-------------------------------------------------------------------|----------|----------------------|----------------------||1   |8932118388 |님·밤 - 최민순 신부 시집 |2022-12-08 |최민순 (지은이) |            |10000 |1800    |0     |https://image.aladin.co.kr/product/30443/38/cover/8932118388_1.jpg |가톨릭출판사    |2022-11-07 23:05:28.0 |2022-11-06 15:16:15.0 ||----|-----------|----------------|-----------|----------|------------|------|--------|------|-------------------------------------------------------------------|----------|----------------------|----------------------| 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.next() returned false  com.zaxxer.hikari.pool.HikariProxyResultSet.next(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.selectOne] - <==      Total: 1 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.close() returned void  com.zaxxer.hikari.pool.HikariProxyResultSet.close(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.getMetaData() returned org.mariadb.jdbc.DatabaseMetaData@597f0937  com.zaxxer.hikari.pool.ProxyConnection.getMetaData(ProxyConnection.java:370) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.getMoreResults() returned false  com.zaxxer.hikari.pool.HikariProxyPreparedStatement.getMoreResults(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.getUpdateCount() returned -1  com.zaxxer.hikari.pool.HikariProxyPreparedStatement.getUpdateCount(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.close() returned   com.zaxxer.hikari.pool.ProxyStatement.close(ProxyStatement.java:75) 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ee8130e] 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ee8130e] 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ee8130e] 
2022-11-07 23:05:28 DEBUG [org.mariadb.jdbc.client.impl.StandardClient] - execute query: ROLLBACK 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.rollback() returned   com.zaxxer.hikari.pool.ProxyConnection.rollback(ProxyConnection.java:385) 
2022-11-07 23:05:28 DEBUG [org.mariadb.jdbc.client.impl.StandardClient] - execute query: set autocommit=1 
2022-11-07 23:05:28 DEBUG [org.mariadb.jdbc.message.server.OkPacket] - System variable change:  autocommit = ON 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.setAutoCommit(true) returned   com.zaxxer.hikari.pool.ProxyConnection.setAutoCommit(ProxyConnection.java:401) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.clearWarnings() returned   com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:257) 
2022-11-07 23:05:28 INFO  [org.springframework.test.context.transaction.TransactionContext] - Rolled back transaction for test: [DefaultTestContext@606f81b5 testClass = BookServiceTest, testInstance = com.example.book.service.BookServiceTest@5e1fc42f, testMethod = updateBookTest@BookServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b21f9f testClass = BookServiceTest, locations = '{file:src/main/webapp/WEB-INF/spring/root-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]] 
2022-11-07 23:05:28 INFO  [org.springframework.test.context.transaction.TransactionContext] - Rolled back transaction for test: [DefaultTestContext@606f81b5 testClass = BookServiceTest, testInstance = com.example.book.service.BookServiceTest@5e1fc42f, testMethod = updateBookTest@BookServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b21f9f testClass = BookServiceTest, locations = '{file:src/main/webapp/WEB-INF/spring/root-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]] 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.getAutoCommit() returned true  com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java:-1) 
2022-11-07 23:05:28 DEBUG [org.mariadb.jdbc.client.impl.StandardClient] - execute query: set autocommit=0 
2022-11-07 23:05:28 DEBUG [org.mariadb.jdbc.message.server.OkPacket] - System variable change:  autocommit = OFF 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.setAutoCommit(false) returned   com.zaxxer.hikari.pool.ProxyConnection.setAutoCommit(ProxyConnection.java:401) 
2022-11-07 23:05:28 INFO  [org.springframework.test.context.transaction.TransactionContext] - Began transaction (1) for test context [DefaultTestContext@606f81b5 testClass = BookServiceTest, testInstance = com.example.book.service.BookServiceTest@10db6131, testMethod = removeBookTest@BookServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b21f9f testClass = BookServiceTest, locations = '{file:src/main/webapp/WEB-INF/spring/root-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@a66e580]; rollback [true] 
2022-11-07 23:05:28 INFO  [org.springframework.test.context.transaction.TransactionContext] - Began transaction (1) for test context [DefaultTestContext@606f81b5 testClass = BookServiceTest, testInstance = com.example.book.service.BookServiceTest@10db6131, testMethod = removeBookTest@BookServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b21f9f testClass = BookServiceTest, locations = '{file:src/main/webapp/WEB-INF/spring/root-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@a66e580]; rollback [true] 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Creating a new SqlSession 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77c233af] 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.getAutoCommit() returned false  com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java:-1) 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.transaction.SpringManagedTransaction] - JDBC Connection [HikariProxyConnection@935599808 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@174e1b69] will be managed by Spring 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.deleteBook] - ==>  Preparing: delete from book where bno = ? 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.new PreparedStatement returned   com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.prepareStatement(delete from book        where bno = ?) returned net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy@35a0e495  com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.setLong(1, 1) returned   com.zaxxer.hikari.pool.HikariProxyPreparedStatement.setLong(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.deleteBook] - ==> Parameters: 1(Long) 
2022-11-07 23:05:28 DEBUG [jdbc.sqlonly] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)1. delete from book where bno = 1  
2022-11-07 23:05:28 DEBUG [org.mariadb.jdbc.client.impl.StandardClient] - execute query: delete from book        where bno = ? 
2022-11-07 23:05:28 DEBUG [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)1. delete from book where bno = 1  {executed in 0 msec} 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.execute() returned false  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.getUpdateCount() returned 1  com.zaxxer.hikari.pool.HikariProxyPreparedStatement.getUpdateCount(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.deleteBook] - <==    Updates: 1 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.close() returned   com.zaxxer.hikari.pool.ProxyStatement.close(ProxyStatement.java:75) 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77c233af] 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77c233af] from current transaction 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.deleteCategory_book] - ==>  Preparing: delete from category_book where bno = ? 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.new PreparedStatement returned   com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.prepareStatement(delete from category_book where bno = ?) returned net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy@5399f6c5  com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.setLong(1, 1) returned   com.zaxxer.hikari.pool.HikariProxyPreparedStatement.setLong(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.deleteCategory_book] - ==> Parameters: 1(Long) 
2022-11-07 23:05:28 DEBUG [jdbc.sqlonly] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)1. delete from category_book where bno = 1  
2022-11-07 23:05:28 DEBUG [org.mariadb.jdbc.client.impl.StandardClient] - execute query: delete from category_book where bno = ? 
2022-11-07 23:05:28 DEBUG [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)1. delete from category_book where bno = 1  {executed in 1 msec} 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.execute() returned false  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.getUpdateCount() returned 1  com.zaxxer.hikari.pool.HikariProxyPreparedStatement.getUpdateCount(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.deleteCategory_book] - <==    Updates: 1 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.close() returned   com.zaxxer.hikari.pool.ProxyStatement.close(ProxyStatement.java:75) 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77c233af] 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77c233af] 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77c233af] 
2022-11-07 23:05:28 DEBUG [org.mariadb.jdbc.client.impl.StandardClient] - execute query: ROLLBACK 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.rollback() returned   com.zaxxer.hikari.pool.ProxyConnection.rollback(ProxyConnection.java:385) 
2022-11-07 23:05:28 DEBUG [org.mariadb.jdbc.client.impl.StandardClient] - execute query: set autocommit=1 
2022-11-07 23:05:28 DEBUG [org.mariadb.jdbc.message.server.OkPacket] - System variable change:  autocommit = ON 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.setAutoCommit(true) returned   com.zaxxer.hikari.pool.ProxyConnection.setAutoCommit(ProxyConnection.java:401) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.clearWarnings() returned   com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:257) 
2022-11-07 23:05:28 INFO  [org.springframework.test.context.transaction.TransactionContext] - Rolled back transaction for test: [DefaultTestContext@606f81b5 testClass = BookServiceTest, testInstance = com.example.book.service.BookServiceTest@10db6131, testMethod = removeBookTest@BookServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b21f9f testClass = BookServiceTest, locations = '{file:src/main/webapp/WEB-INF/spring/root-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]] 
2022-11-07 23:05:28 INFO  [org.springframework.test.context.transaction.TransactionContext] - Rolled back transaction for test: [DefaultTestContext@606f81b5 testClass = BookServiceTest, testInstance = com.example.book.service.BookServiceTest@10db6131, testMethod = removeBookTest@BookServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b21f9f testClass = BookServiceTest, locations = '{file:src/main/webapp/WEB-INF/spring/root-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]] 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.getAutoCommit() returned true  com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java:-1) 
2022-11-07 23:05:28 DEBUG [org.mariadb.jdbc.client.impl.StandardClient] - execute query: set autocommit=0 
2022-11-07 23:05:28 DEBUG [org.mariadb.jdbc.message.server.OkPacket] - System variable change:  autocommit = OFF 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.setAutoCommit(false) returned   com.zaxxer.hikari.pool.ProxyConnection.setAutoCommit(ProxyConnection.java:401) 
2022-11-07 23:05:28 INFO  [org.springframework.test.context.transaction.TransactionContext] - Began transaction (1) for test context [DefaultTestContext@606f81b5 testClass = BookServiceTest, testInstance = com.example.book.service.BookServiceTest@4fe64d23, testMethod = registBookTest@BookServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b21f9f testClass = BookServiceTest, locations = '{file:src/main/webapp/WEB-INF/spring/root-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@a66e580]; rollback [true] 
2022-11-07 23:05:28 INFO  [org.springframework.test.context.transaction.TransactionContext] - Began transaction (1) for test context [DefaultTestContext@606f81b5 testClass = BookServiceTest, testInstance = com.example.book.service.BookServiceTest@4fe64d23, testMethod = registBookTest@BookServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b21f9f testClass = BookServiceTest, locations = '{file:src/main/webapp/WEB-INF/spring/root-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@a66e580]; rollback [true] 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Creating a new SqlSession 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58437801] 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.getAutoCommit() returned false  com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java:-1) 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.transaction.SpringManagedTransaction] - JDBC Connection [HikariProxyConnection@1984317333 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@174e1b69] will be managed by Spring 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.selectOne] - ==>  Preparing: select * from book where bno = 1 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.new PreparedStatement returned   com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.prepareStatement(select * from book where bno = 1) returned net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy@b34832b  com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327) 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.selectOne] - ==> Parameters:  
2022-11-07 23:05:28 DEBUG [jdbc.sqlonly] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)1. select * from book where bno = 1  
2022-11-07 23:05:28 DEBUG [org.mariadb.jdbc.client.impl.StandardClient] - execute query: select * from book where bno = 1 
2022-11-07 23:05:28 DEBUG [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)1. select * from book where bno = 1  {executed in 0 msec} 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.execute() returned true  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.new ResultSet returned   com.zaxxer.hikari.pool.ProxyStatement.getResultSet(ProxyStatement.java:213) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.getResultSet() returned net.sf.log4jdbc.sql.jdbcapi.ResultSetSpy@48f4713c  com.zaxxer.hikari.pool.ProxyStatement.getResultSet(ProxyStatement.java:213) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getMetaData() returned org.mariadb.jdbc.client.result.ResultSetMetaData@f1868c9  com.zaxxer.hikari.pool.HikariProxyResultSet.getMetaData(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getType() returned 1003  com.zaxxer.hikari.pool.HikariProxyResultSet.getType(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.isClosed() returned false  com.zaxxer.hikari.pool.HikariProxyResultSet.isClosed(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.next() returned true  com.zaxxer.hikari.pool.HikariProxyResultSet.next(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getLong(bno) returned 1  com.zaxxer.hikari.pool.HikariProxyResultSet.getLong(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(isbn) returned 8932118388  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(title) returned 님·밤 - 최민순 신부 시집  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getDate(pubDate) returned 2022-12-08  com.zaxxer.hikari.pool.HikariProxyResultSet.getDate(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(author) returned 최민순 (지은이)  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(description) returned   com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getInt(price) returned 18000  com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getInt(stock) returned 830  com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(cover) returned https://image.aladin.co.kr/product/30443/38/cover/8932118388_1.jpg  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(publisher) returned 가톨릭출판사  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.isClosed() returned false  com.zaxxer.hikari.pool.HikariProxyResultSet.isClosed(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 INFO  [jdbc.resultsettable] - |----|-----------|----------------|-----------|----------|------------|------|--------|------|-------------------------------------------------------------------|----------|------------|----------------------||bno |isbn       |title           |pubdate    |author    |description |price |mileage |stock |cover                                                              |publisher |update_date |reg_date              ||----|-----------|----------------|-----------|----------|------------|------|--------|------|-------------------------------------------------------------------|----------|------------|----------------------||1   |8932118388 |님·밤 - 최민순 신부 시집 |2022-12-08 |최민순 (지은이) |            |18000 |1800    |830   |https://image.aladin.co.kr/product/30443/38/cover/8932118388_1.jpg |가톨릭출판사    |[null]      |2022-11-06 15:16:15.0 ||----|-----------|----------------|-----------|----------|------------|------|--------|------|-------------------------------------------------------------------|----------|------------|----------------------| 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.next() returned false  com.zaxxer.hikari.pool.HikariProxyResultSet.next(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.selectOne] - <==      Total: 1 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.close() returned void  com.zaxxer.hikari.pool.HikariProxyResultSet.close(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.getMetaData() returned org.mariadb.jdbc.DatabaseMetaData@7b6c6e70  com.zaxxer.hikari.pool.ProxyConnection.getMetaData(ProxyConnection.java:370) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.getMoreResults() returned false  com.zaxxer.hikari.pool.HikariProxyPreparedStatement.getMoreResults(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.getUpdateCount() returned -1  com.zaxxer.hikari.pool.HikariProxyPreparedStatement.getUpdateCount(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.close() returned   com.zaxxer.hikari.pool.ProxyStatement.close(ProxyStatement.java:75) 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58437801] 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58437801] from current transaction 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.selectCa_Books_categoryNameId] - ==>  Preparing: select category_name_id from category_book where bno = ? 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.new PreparedStatement returned   com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.prepareStatement(select category_name_id from category_book where bno = ?) returned net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy@f324455  com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.setLong(1, 1) returned   com.zaxxer.hikari.pool.HikariProxyPreparedStatement.setLong(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.selectCa_Books_categoryNameId] - ==> Parameters: 1(Long) 
2022-11-07 23:05:28 DEBUG [jdbc.sqlonly] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)1. select category_name_id from category_book where bno = 1  
2022-11-07 23:05:28 DEBUG [org.mariadb.jdbc.client.impl.StandardClient] - execute query: select category_name_id from category_book where bno = ? 
2022-11-07 23:05:28 DEBUG [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)1. select category_name_id from category_book where bno = 1  {executed in 0 msec} 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.execute() returned true  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.new ResultSet returned   com.zaxxer.hikari.pool.ProxyStatement.getResultSet(ProxyStatement.java:213) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.getResultSet() returned net.sf.log4jdbc.sql.jdbcapi.ResultSetSpy@3a894088  com.zaxxer.hikari.pool.ProxyStatement.getResultSet(ProxyStatement.java:213) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getMetaData() returned org.mariadb.jdbc.client.result.ResultSetMetaData@370c1968  com.zaxxer.hikari.pool.HikariProxyResultSet.getMetaData(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getType() returned 1003  com.zaxxer.hikari.pool.HikariProxyResultSet.getType(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.isClosed() returned false  com.zaxxer.hikari.pool.HikariProxyResultSet.isClosed(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.next() returned true  com.zaxxer.hikari.pool.HikariProxyResultSet.next(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getInt(category_name_id) returned 21  com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.isClosed() returned false  com.zaxxer.hikari.pool.HikariProxyResultSet.isClosed(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 INFO  [jdbc.resultsettable] - |-----------------||category_name_id ||-----------------||21               ||-----------------| 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.next() returned false  com.zaxxer.hikari.pool.HikariProxyResultSet.next(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.selectCa_Books_categoryNameId] - <==      Total: 1 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.close() returned void  com.zaxxer.hikari.pool.HikariProxyResultSet.close(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.getMetaData() returned org.mariadb.jdbc.DatabaseMetaData@2f0bfe17  com.zaxxer.hikari.pool.ProxyConnection.getMetaData(ProxyConnection.java:370) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.getMoreResults() returned false  com.zaxxer.hikari.pool.HikariProxyPreparedStatement.getMoreResults(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.getUpdateCount() returned -1  com.zaxxer.hikari.pool.HikariProxyPreparedStatement.getUpdateCount(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.close() returned   com.zaxxer.hikari.pool.ProxyStatement.close(ProxyStatement.java:75) 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58437801] 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58437801] from current transaction 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.selectCategory_name] - ==>  Preparing: select category_name from category where category_name_id = ? 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.new PreparedStatement returned   com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.prepareStatement(select category_name from category where category_name_id = ?) returned net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy@3206174f  com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.setInt(1, 21) returned   com.zaxxer.hikari.pool.HikariProxyPreparedStatement.setInt(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.selectCategory_name] - ==> Parameters: 21(Integer) 
2022-11-07 23:05:28 DEBUG [jdbc.sqlonly] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)1. select category_name from category where category_name_id = 21  
2022-11-07 23:05:28 DEBUG [org.mariadb.jdbc.client.impl.StandardClient] - execute query: select category_name from category where category_name_id = ? 
2022-11-07 23:05:28 DEBUG [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)1. select category_name from category where category_name_id = 21  {executed in 0 msec} 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.execute() returned true  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.new ResultSet returned   com.zaxxer.hikari.pool.ProxyStatement.getResultSet(ProxyStatement.java:213) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.getResultSet() returned net.sf.log4jdbc.sql.jdbcapi.ResultSetSpy@42fb8c87  com.zaxxer.hikari.pool.ProxyStatement.getResultSet(ProxyStatement.java:213) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getMetaData() returned org.mariadb.jdbc.client.result.ResultSetMetaData@15eb0ae9  com.zaxxer.hikari.pool.HikariProxyResultSet.getMetaData(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getType() returned 1003  com.zaxxer.hikari.pool.HikariProxyResultSet.getType(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.isClosed() returned false  com.zaxxer.hikari.pool.HikariProxyResultSet.isClosed(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.next() returned true  com.zaxxer.hikari.pool.HikariProxyResultSet.next(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(category_name) returned 종교  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.isClosed() returned false  com.zaxxer.hikari.pool.HikariProxyResultSet.isClosed(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 INFO  [jdbc.resultsettable] - |--------------||category_name ||--------------||종교            ||--------------| 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.next() returned false  com.zaxxer.hikari.pool.HikariProxyResultSet.next(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.selectCategory_name] - <==      Total: 1 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.close() returned void  com.zaxxer.hikari.pool.HikariProxyResultSet.close(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.getMetaData() returned org.mariadb.jdbc.DatabaseMetaData@65e0b505  com.zaxxer.hikari.pool.ProxyConnection.getMetaData(ProxyConnection.java:370) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.getMoreResults() returned false  com.zaxxer.hikari.pool.HikariProxyPreparedStatement.getMoreResults(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.getUpdateCount() returned -1  com.zaxxer.hikari.pool.HikariProxyPreparedStatement.getUpdateCount(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.close() returned   com.zaxxer.hikari.pool.ProxyStatement.close(ProxyStatement.java:75) 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58437801] 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58437801] from current transaction 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.insertBook] - ==>  Preparing: insert into book (isbn, title, pubDate, author, description, price, stock, cover, publisher) values (?,?,?,?,?,?,?,?,?) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.new PreparedStatement returned   com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:334) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.prepareStatement(insert into book (isbn, title, pubDate, author, description, price, stock, cover, publisher)        values (?,?,?,?,?,?,?,?,?), 1) returned net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy@795f5d51  com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:334) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.setString(1, "8932118388") returned   com.zaxxer.hikari.pool.HikariProxyPreparedStatement.setString(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.setString(2, "님·밤 - 최민순 신부 시집") returned   com.zaxxer.hikari.pool.HikariProxyPreparedStatement.setString(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.setTimestamp(3, 2022-12-08 00:00:00.0) returned   com.zaxxer.hikari.pool.HikariProxyPreparedStatement.setTimestamp(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.setString(4, "최민순 (지은이)") returned   com.zaxxer.hikari.pool.HikariProxyPreparedStatement.setString(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.setString(5, "") returned   com.zaxxer.hikari.pool.HikariProxyPreparedStatement.setString(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.setInt(6, 18000) returned   com.zaxxer.hikari.pool.HikariProxyPreparedStatement.setInt(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.setInt(7, 830) returned   com.zaxxer.hikari.pool.HikariProxyPreparedStatement.setInt(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.setString(8, "https://image.aladin.co.kr/product/30443/38/cover/8932118388_1.jpg") returned   com.zaxxer.hikari.pool.HikariProxyPreparedStatement.setString(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.setString(9, "가톨릭출판사") returned   com.zaxxer.hikari.pool.HikariProxyPreparedStatement.setString(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.insertBook] - ==> Parameters: 8932118388(String), 님·밤 - 최민순 신부 시집(String), 2022-12-08 00:00:00.0(Timestamp), 최민순 (지은이)(String), (String), 18000(Integer), 830(Integer), https://image.aladin.co.kr/product/30443/38/cover/8932118388_1.jpg(String), 가톨릭출판사(String) 
2022-11-07 23:05:28 DEBUG [jdbc.sqlonly] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)1. insert into book (isbn, title, pubDate, author, description, price, stock, cover, publisher) values ('8932118388','님·밤 - 최민순 신부 시집','12/08/2022 00:00:00.000','최민순 (지은이)','',18000,830,'https://image.aladin.co.kr/product/30443/38/cover/8932118388_1.jpg','가톨릭출판사')  
2022-11-07 23:05:28 DEBUG [org.mariadb.jdbc.client.impl.StandardClient] - execute query: insert into book (isbn, title, pubDate, author, description, price, stock, cover, publisher)        values (?,?,?,?,?,?,?,?,?) 
2022-11-07 23:05:28 DEBUG [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)1. insert into book (isbn, title, pubDate, author, description, price, stock, cover, publisher) values ('8932118388','님·밤 - 최민순 신부 시집','12/08/2022 00:00:00.000','최민순 (지은이)','',18000,830,'https://image.aladin.co.kr/product/30443/38/cover/8932118388_1.jpg','가톨릭출판사')  {executed in 1 msec} 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.execute() returned false  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.getUpdateCount() returned 1  com.zaxxer.hikari.pool.HikariProxyPreparedStatement.getUpdateCount(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.insertBook] - <==    Updates: 1 
2022-11-07 23:05:28 DEBUG [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)1. getGeneratedKeys on query: insert into book (isbn, title, pubDate, author, description, price, stock, cover, publisher) values ('8932118388','님·밤 - 최민순 신부 시집','12/08/2022 00:00:00.000','최민순 (지은이)','',18000,830,'https://image.aladin.co.kr/product/30443/38/cover/8932118388_1.jpg','가톨릭출판사')  {executed in 0 msec} 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.new ResultSet returned   com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.getGeneratedKeys() returned net.sf.log4jdbc.sql.jdbcapi.ResultSetSpy@2274160  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getMetaData() returned org.mariadb.jdbc.client.result.ResultSetMetaData@65383667  com.zaxxer.hikari.pool.HikariProxyResultSet.getMetaData(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.next() returned true  com.zaxxer.hikari.pool.HikariProxyResultSet.next(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getLong(1) returned 1079  com.zaxxer.hikari.pool.HikariProxyResultSet.getLong(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 INFO  [jdbc.resultsettable] - |----------||insert_id ||----------||1079      ||----------| 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.next() returned false  com.zaxxer.hikari.pool.HikariProxyResultSet.next(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.close() returned void  com.zaxxer.hikari.pool.HikariProxyResultSet.close(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.close() returned   com.zaxxer.hikari.pool.ProxyStatement.close(ProxyStatement.java:75) 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58437801] 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58437801] from current transaction 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.insertCategory] - ==>  Preparing: INSERT INTO category (category_name_id, category_name) select ?,? from dual where not exists (select * from category where category_name_id=? or category_name=?) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.new PreparedStatement returned   com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.prepareStatement(INSERT INTO category (category_name_id, category_name) select ?,? from dual        where not exists (select * from category where category_name_id=? or category_name=?)) returned net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy@63cd2cd2  com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.setInt(1, 21) returned   com.zaxxer.hikari.pool.HikariProxyPreparedStatement.setInt(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.setString(2, "종교") returned   com.zaxxer.hikari.pool.HikariProxyPreparedStatement.setString(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.setInt(3, 21) returned   com.zaxxer.hikari.pool.HikariProxyPreparedStatement.setInt(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.setString(4, "종교") returned   com.zaxxer.hikari.pool.HikariProxyPreparedStatement.setString(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.insertCategory] - ==> Parameters: 21(Integer), 종교(String), 21(Integer), 종교(String) 
2022-11-07 23:05:28 DEBUG [jdbc.sqlonly] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)1. INSERT INTO category (category_name_id, category_name) select 21,'종교' from dual where not exists (select * from category where category_name_id=21 or category_name='종교')  
2022-11-07 23:05:28 DEBUG [org.mariadb.jdbc.client.impl.StandardClient] - execute query: INSERT INTO category (category_name_id, category_name) select ?,? from dual        where not exists (select * from category where category_name_id=? or category_name=?) 
2022-11-07 23:05:28 DEBUG [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)1. INSERT INTO category (category_name_id, category_name) select 21,'종교' from dual where not exists (select * from category where category_name_id=21 or category_name='종교')  {executed in 0 msec} 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.execute() returned false  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.getUpdateCount() returned 0  com.zaxxer.hikari.pool.HikariProxyPreparedStatement.getUpdateCount(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.insertCategory] - <==    Updates: 0 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.close() returned   com.zaxxer.hikari.pool.ProxyStatement.close(ProxyStatement.java:75) 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58437801] 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58437801] from current transaction 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.insertCategoryBook] - ==>  Preparing: insert into category_book values (?,?) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.new PreparedStatement returned   com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.prepareStatement(insert into category_book        values (?,?)) returned net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy@49c17ba4  com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.setLong(1, 1079) returned   com.zaxxer.hikari.pool.HikariProxyPreparedStatement.setLong(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.setInt(2, 21) returned   com.zaxxer.hikari.pool.HikariProxyPreparedStatement.setInt(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.insertCategoryBook] - ==> Parameters: 1079(Long), 21(Integer) 
2022-11-07 23:05:28 DEBUG [jdbc.sqlonly] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)1. insert into category_book values (1079,21)  
2022-11-07 23:05:28 DEBUG [org.mariadb.jdbc.client.impl.StandardClient] - execute query: insert into category_book        values (?,?) 
2022-11-07 23:05:28 DEBUG [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)1. insert into category_book values (1079,21)  {executed in 0 msec} 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.execute() returned false  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.getUpdateCount() returned 1  com.zaxxer.hikari.pool.HikariProxyPreparedStatement.getUpdateCount(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.insertCategoryBook] - <==    Updates: 1 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.close() returned   com.zaxxer.hikari.pool.ProxyStatement.close(ProxyStatement.java:75) 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58437801] 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58437801] 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58437801] 
2022-11-07 23:05:28 DEBUG [org.mariadb.jdbc.client.impl.StandardClient] - execute query: ROLLBACK 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.rollback() returned   com.zaxxer.hikari.pool.ProxyConnection.rollback(ProxyConnection.java:385) 
2022-11-07 23:05:28 DEBUG [org.mariadb.jdbc.client.impl.StandardClient] - execute query: set autocommit=1 
2022-11-07 23:05:28 DEBUG [org.mariadb.jdbc.message.server.OkPacket] - System variable change:  autocommit = ON 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.setAutoCommit(true) returned   com.zaxxer.hikari.pool.ProxyConnection.setAutoCommit(ProxyConnection.java:401) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.clearWarnings() returned   com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:257) 
2022-11-07 23:05:28 INFO  [org.springframework.test.context.transaction.TransactionContext] - Rolled back transaction for test: [DefaultTestContext@606f81b5 testClass = BookServiceTest, testInstance = com.example.book.service.BookServiceTest@4fe64d23, testMethod = registBookTest@BookServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b21f9f testClass = BookServiceTest, locations = '{file:src/main/webapp/WEB-INF/spring/root-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]] 
2022-11-07 23:05:28 INFO  [org.springframework.test.context.transaction.TransactionContext] - Rolled back transaction for test: [DefaultTestContext@606f81b5 testClass = BookServiceTest, testInstance = com.example.book.service.BookServiceTest@4fe64d23, testMethod = registBookTest@BookServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b21f9f testClass = BookServiceTest, locations = '{file:src/main/webapp/WEB-INF/spring/root-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]] 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.getAutoCommit() returned true  com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java:-1) 
2022-11-07 23:05:28 DEBUG [org.mariadb.jdbc.client.impl.StandardClient] - execute query: set autocommit=0 
2022-11-07 23:05:28 DEBUG [org.mariadb.jdbc.message.server.OkPacket] - System variable change:  autocommit = OFF 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.setAutoCommit(false) returned   com.zaxxer.hikari.pool.ProxyConnection.setAutoCommit(ProxyConnection.java:401) 
2022-11-07 23:05:28 INFO  [org.springframework.test.context.transaction.TransactionContext] - Began transaction (1) for test context [DefaultTestContext@606f81b5 testClass = BookServiceTest, testInstance = com.example.book.service.BookServiceTest@43e065f2, testMethod = getBooksTest@BookServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b21f9f testClass = BookServiceTest, locations = '{file:src/main/webapp/WEB-INF/spring/root-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@a66e580]; rollback [true] 
2022-11-07 23:05:28 INFO  [org.springframework.test.context.transaction.TransactionContext] - Began transaction (1) for test context [DefaultTestContext@606f81b5 testClass = BookServiceTest, testInstance = com.example.book.service.BookServiceTest@43e065f2, testMethod = getBooksTest@BookServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b21f9f testClass = BookServiceTest, locations = '{file:src/main/webapp/WEB-INF/spring/root-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@a66e580]; rollback [true] 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Creating a new SqlSession 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@423c5404] 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.getAutoCommit() returned false  com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java:-1) 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.transaction.SpringManagedTransaction] - JDBC Connection [HikariProxyConnection@437098149 wrapping net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@174e1b69] will be managed by Spring 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.selectBooks] - ==>  Preparing: select * from book order by bno desc limit ? , ? 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.new PreparedStatement returned   com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.prepareStatement(select * from book order by bno desc limit ? , ?) returned net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy@5a02bfe3  com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.setInt(1, 0) returned   com.zaxxer.hikari.pool.HikariProxyPreparedStatement.setInt(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.setInt(2, 9) returned   com.zaxxer.hikari.pool.HikariProxyPreparedStatement.setInt(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.selectBooks] - ==> Parameters: 0(Integer), 9(Integer) 
2022-11-07 23:05:28 DEBUG [jdbc.sqlonly] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)1. select * from book order by bno desc limit 0 , 9  
2022-11-07 23:05:28 DEBUG [org.mariadb.jdbc.client.impl.StandardClient] - execute query: select * from book order by bno desc limit ? , ? 
2022-11-07 23:05:28 DEBUG [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)1. select * from book order by bno desc limit 0 , 9  {executed in 1 msec} 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.execute() returned true  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.new ResultSet returned   com.zaxxer.hikari.pool.ProxyStatement.getResultSet(ProxyStatement.java:213) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.getResultSet() returned net.sf.log4jdbc.sql.jdbcapi.ResultSetSpy@7a3e5cd3  com.zaxxer.hikari.pool.ProxyStatement.getResultSet(ProxyStatement.java:213) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getMetaData() returned org.mariadb.jdbc.client.result.ResultSetMetaData@3c79088e  com.zaxxer.hikari.pool.HikariProxyResultSet.getMetaData(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getType() returned 1003  com.zaxxer.hikari.pool.HikariProxyResultSet.getType(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.isClosed() returned false  com.zaxxer.hikari.pool.HikariProxyResultSet.isClosed(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.next() returned true  com.zaxxer.hikari.pool.HikariProxyResultSet.next(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getLong(bno) returned 1069  com.zaxxer.hikari.pool.HikariProxyResultSet.getLong(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(isbn) returned void  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(title) returned 타이틀1  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getDate(pubDate) returned 2022-11-07  com.zaxxer.hikari.pool.HikariProxyResultSet.getDate(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(author) returned 저자1  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(description) returned 상세내용1  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getInt(price) returned 50000  com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getInt(stock) returned 1000  com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(cover) returned 커버이미지1  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(publisher) returned 출판사1  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.isClosed() returned false  com.zaxxer.hikari.pool.HikariProxyResultSet.isClosed(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.next() returned true  com.zaxxer.hikari.pool.HikariProxyResultSet.next(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getLong(bno) returned 1068  com.zaxxer.hikari.pool.HikariProxyResultSet.getLong(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(isbn) returned void  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(title) returned 타이틀1  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getDate(pubDate) returned 2022-11-07  com.zaxxer.hikari.pool.HikariProxyResultSet.getDate(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(author) returned 저자1  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(description) returned 상세내용1  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getInt(price) returned 50000  com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getInt(stock) returned 1000  com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(cover) returned 커버이미지1  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(publisher) returned 출판사1  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.isClosed() returned false  com.zaxxer.hikari.pool.HikariProxyResultSet.isClosed(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.next() returned true  com.zaxxer.hikari.pool.HikariProxyResultSet.next(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getLong(bno) returned 1067  com.zaxxer.hikari.pool.HikariProxyResultSet.getLong(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(isbn) returned void  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(title) returned 타이틀1  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getDate(pubDate) returned 2022-11-07  com.zaxxer.hikari.pool.HikariProxyResultSet.getDate(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(author) returned 저자1  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(description) returned 상세내용1  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getInt(price) returned 50000  com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getInt(stock) returned 1000  com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(cover) returned 커버이미지1  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(publisher) returned 출판사1  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.isClosed() returned false  com.zaxxer.hikari.pool.HikariProxyResultSet.isClosed(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.next() returned true  com.zaxxer.hikari.pool.HikariProxyResultSet.next(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getLong(bno) returned 1066  com.zaxxer.hikari.pool.HikariProxyResultSet.getLong(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(isbn) returned void  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(title) returned 타이틀1  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getDate(pubDate) returned 2022-11-07  com.zaxxer.hikari.pool.HikariProxyResultSet.getDate(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(author) returned 저자1  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(description) returned 상세내용1  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getInt(price) returned 50000  com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getInt(stock) returned 1000  com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(cover) returned 커버이미지1  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(publisher) returned 출판사1  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.isClosed() returned false  com.zaxxer.hikari.pool.HikariProxyResultSet.isClosed(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.next() returned true  com.zaxxer.hikari.pool.HikariProxyResultSet.next(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getLong(bno) returned 1059  com.zaxxer.hikari.pool.HikariProxyResultSet.getLong(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(isbn) returned void  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(title) returned 타이틀  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getDate(pubDate) returned 2022-11-06  com.zaxxer.hikari.pool.HikariProxyResultSet.getDate(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(author) returned 저자1  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(description) returned 상세내용  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getInt(price) returned 50000  com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getInt(stock) returned 9999  com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(cover) returned 커버이미지1  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(publisher) returned 출판사  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.isClosed() returned false  com.zaxxer.hikari.pool.HikariProxyResultSet.isClosed(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.next() returned true  com.zaxxer.hikari.pool.HikariProxyResultSet.next(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getLong(bno) returned 1000  com.zaxxer.hikari.pool.HikariProxyResultSet.getLong(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(isbn) returned K962830267  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(title) returned 문화.예술 건축디자인모음집 - 개정판  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getDate(pubDate) returned 2023-02-10  com.zaxxer.hikari.pool.HikariProxyResultSet.getDate(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(author) returned 월드해피북스 편집부 (지은이)  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(description) returned   com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getInt(price) returned 99000  com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getInt(stock) returned 506  com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(cover) returned https://image.aladin.co.kr/product/30413/16/cover/k962830267_1.jpg  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(publisher) returned 월드해피북스  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.isClosed() returned false  com.zaxxer.hikari.pool.HikariProxyResultSet.isClosed(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.next() returned true  com.zaxxer.hikari.pool.HikariProxyResultSet.next(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getLong(bno) returned 999  com.zaxxer.hikari.pool.HikariProxyResultSet.getLong(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(isbn) returned 8934966122  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(title) returned Grammar Star 그래머 스타 기본편 Level 4 - 초등 영문법 교재 / 문법의 시작  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getDate(pubDate) returned 2022-11-01  com.zaxxer.hikari.pool.HikariProxyResultSet.getDate(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(author) returned 지식채널, 김영사영어연구소 (지은이)  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(description) returned 쉬운 문법 설명과 실전에 필요한 실용 문제로 문법을 학습할 수 있다. 다양하고 많은 유형에 문제를 통해 실전 문법을 익히고 영어 교과과정 대비도 가능하다. 쉽게 제시한 문법 개념과 원리를 이해하고 핵심 문법 개념을 익히고 나선형으로 확장된 문제로 문법 완성하는 교재다.  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getInt(price) returned 14000  com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getInt(stock) returned 244  com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(cover) returned https://image.aladin.co.kr/product/30413/16/cover/8934966122_2.jpg  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(publisher) returned 김영사  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.isClosed() returned false  com.zaxxer.hikari.pool.HikariProxyResultSet.isClosed(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.next() returned true  com.zaxxer.hikari.pool.HikariProxyResultSet.next(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getLong(bno) returned 998  com.zaxxer.hikari.pool.HikariProxyResultSet.getLong(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(isbn) returned K952830267  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(title) returned 당신을 향한 좋아요 그리고 구독  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getDate(pubDate) returned 2022-11-01  com.zaxxer.hikari.pool.HikariProxyResultSet.getDate(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(author) returned 김금래 (지은이)  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(description) returned 4H 신문사의 요청으로 시작한 여행에세이인 이 글은 명승지나 유명 관광지를 중심으로 한 여행이 아닌 소박한 여행의 기록이다. 집 주변의 산책로를 걷거나 며칠씩 집을 비우는 여행까지를 망라한다. 삶과 여행, 자아와 세계인식의 확장을 가져오는 성찰의 도서이다.  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getInt(price) returned 18000  com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getInt(stock) returned 36  com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(cover) returned https://image.aladin.co.kr/product/30413/16/cover/k952830267_1.jpg  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(publisher) returned 이우  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.isClosed() returned false  com.zaxxer.hikari.pool.HikariProxyResultSet.isClosed(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.next() returned true  com.zaxxer.hikari.pool.HikariProxyResultSet.next(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getLong(bno) returned 997  com.zaxxer.hikari.pool.HikariProxyResultSet.getLong(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(isbn) returned K992830267  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(title) returned 도심속 아름다운 자연의 조화 - 개정8판  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getDate(pubDate) returned 2023-02-10  com.zaxxer.hikari.pool.HikariProxyResultSet.getDate(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(author) returned 에코탑월드북 편집부 (지은이)  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(description) returned   com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getInt(price) returned 99900  com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getInt(stock) returned 432  com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(cover) returned https://image.aladin.co.kr/product/30413/16/cover/k992830267_1.jpg  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getString(publisher) returned 에코탑월드북  com.zaxxer.hikari.pool.HikariProxyResultSet.getString(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.isClosed() returned false  com.zaxxer.hikari.pool.HikariProxyResultSet.isClosed(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 INFO  [jdbc.resultsettable] - |-----|-----------|-----------------------------------------------------|-----------|---------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------|------|--------|------|-------------------------------------------------------------------|----------|------------|----------------------||bno  |isbn       |title                                                |pubdate    |author               |description                                                                                                                                            |price |mileage |stock |cover                                                              |publisher |update_date |reg_date              ||-----|-----------|-----------------------------------------------------|-----------|---------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------|------|--------|------|-------------------------------------------------------------------|----------|------------|----------------------||1069 |null       |타이틀1                                                 |2022-11-07 |저자1                  |상세내용1                                                                                                                                                  |50000 |[null]  |1000  |커버이미지1                                                             |출판사1      |[null]      |2022-11-07 14:39:39.0 ||1068 |null       |타이틀1                                                 |2022-11-07 |저자1                  |상세내용1                                                                                                                                                  |50000 |[null]  |1000  |커버이미지1                                                             |출판사1      |[null]      |2022-11-07 14:37:53.0 ||1067 |null       |타이틀1                                                 |2022-11-07 |저자1                  |상세내용1                                                                                                                                                  |50000 |[null]  |1000  |커버이미지1                                                             |출판사1      |[null]      |2022-11-07 14:36:06.0 ||1066 |null       |타이틀1                                                 |2022-11-07 |저자1                  |상세내용1                                                                                                                                                  |50000 |[null]  |1000  |커버이미지1                                                             |출판사1      |[null]      |2022-11-07 14:16:41.0 ||1059 |null       |타이틀                                                  |2022-11-06 |저자1                  |상세내용                                                                                                                                                   |50000 |[null]  |9999  |커버이미지1                                                             |출판사       |[null]      |2022-11-06 18:20:17.0 ||1000 |K962830267 |문화.예술 건축디자인모음집 - 개정판                                 |2023-02-10 |월드해피북스 편집부 (지은이)     |                                                                                                                                                       |99000 |9900    |506   |https://image.aladin.co.kr/product/30413/16/cover/k962830267_1.jpg |월드해피북스    |[null]      |2022-11-06 15:16:15.0 ||999  |8934966122 |Grammar Star 그래머 스타 기본편 Level 4 - 초등 영문법 교재 / 문법의 시작 |2022-11-01 |지식채널, 김영사영어연구소 (지은이) |쉬운 문법 설명과 실전에 필요한 실용 문제로 문법을 학습할 수 있다. 다양하고 많은 유형에 문제를 통해 실전 문법을 익히고 영어 교과과정 대비도 가능하다. 쉽게 제시한 문법 개념과 원리를 이해하고 핵심 문법 개념을 익히고 나선형으로 확장된 문제로 문법 완성하는 교재다. |14000 |1400    |244   |https://image.aladin.co.kr/product/30413/16/cover/8934966122_2.jpg |김영사       |[null]      |2022-11-06 15:16:15.0 ||998  |K952830267 |당신을 향한 좋아요 그리고 구독                                    |2022-11-01 |김금래 (지은이)            |4H 신문사의 요청으로 시작한 여행에세이인 이 글은 명승지나 유명 관광지를 중심으로 한 여행이 아닌 소박한 여행의 기록이다. 집 주변의 산책로를 걷거나 며칠씩 집을 비우는 여행까지를 망라한다. 삶과 여행, 자아와 세계인식의 확장을 가져오는 성찰의 도서이다.        |18000 |1800    |36    |https://image.aladin.co.kr/product/30413/16/cover/k952830267_1.jpg |이우        |[null]      |2022-11-06 15:16:15.0 ||997  |K992830267 |도심속 아름다운 자연의 조화 - 개정8판                               |2023-02-10 |에코탑월드북 편집부 (지은이)     |                                                                                                                                                       |99900 |9990    |432   |https://image.aladin.co.kr/product/30413/16/cover/k992830267_1.jpg |에코탑월드북    |[null]      |2022-11-06 15:16:15.0 ||-----|-----------|-----------------------------------------------------|-----------|---------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------|------|--------|------|-------------------------------------------------------------------|----------|------------|----------------------| 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.next() returned false  com.zaxxer.hikari.pool.HikariProxyResultSet.next(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.selectBooks] - <==      Total: 9 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.close() returned void  com.zaxxer.hikari.pool.HikariProxyResultSet.close(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.getMetaData() returned org.mariadb.jdbc.DatabaseMetaData@18f55704  com.zaxxer.hikari.pool.ProxyConnection.getMetaData(ProxyConnection.java:370) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.getMoreResults() returned false  com.zaxxer.hikari.pool.HikariProxyPreparedStatement.getMoreResults(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.getUpdateCount() returned -1  com.zaxxer.hikari.pool.HikariProxyPreparedStatement.getUpdateCount(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.close() returned   com.zaxxer.hikari.pool.ProxyStatement.close(ProxyStatement.java:75) 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@423c5404] 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@423c5404] from current transaction 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.bookCnt] - ==>  Preparing: select count(*) from book 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.new PreparedStatement returned   com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.prepareStatement(select count(*) from book) returned net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy@6add8e3f  com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:327) 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.bookCnt] - ==> Parameters:  
2022-11-07 23:05:28 DEBUG [jdbc.sqlonly] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)1. select count(*) from book  
2022-11-07 23:05:28 DEBUG [org.mariadb.jdbc.client.impl.StandardClient] - execute query: select count(*) from book 
2022-11-07 23:05:28 DEBUG [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)1. select count(*) from book  {executed in 0 msec} 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.execute() returned true  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.new ResultSet returned   com.zaxxer.hikari.pool.ProxyStatement.getResultSet(ProxyStatement.java:213) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.getResultSet() returned net.sf.log4jdbc.sql.jdbcapi.ResultSetSpy@58a2b917  com.zaxxer.hikari.pool.ProxyStatement.getResultSet(ProxyStatement.java:213) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getMetaData() returned org.mariadb.jdbc.client.result.ResultSetMetaData@48904d5a  com.zaxxer.hikari.pool.HikariProxyResultSet.getMetaData(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getType() returned 1003  com.zaxxer.hikari.pool.HikariProxyResultSet.getType(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.isClosed() returned false  com.zaxxer.hikari.pool.HikariProxyResultSet.isClosed(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.next() returned true  com.zaxxer.hikari.pool.HikariProxyResultSet.next(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.getInt(count(*)) returned 1005  com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.isClosed() returned false  com.zaxxer.hikari.pool.HikariProxyResultSet.isClosed(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 INFO  [jdbc.resultsettable] - |---------||count(*) ||---------||1005     ||---------| 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.next() returned false  com.zaxxer.hikari.pool.HikariProxyResultSet.next(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [com.example.book.dao.BookDao.bookCnt] - <==      Total: 1 
2022-11-07 23:05:28 DEBUG [jdbc.resultset] - 1. ResultSet.close() returned void  com.zaxxer.hikari.pool.HikariProxyResultSet.close(HikariProxyResultSet.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.getMetaData() returned org.mariadb.jdbc.DatabaseMetaData@12bbfc54  com.zaxxer.hikari.pool.ProxyConnection.getMetaData(ProxyConnection.java:370) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.getMoreResults() returned false  com.zaxxer.hikari.pool.HikariProxyPreparedStatement.getMoreResults(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.getUpdateCount() returned -1  com.zaxxer.hikari.pool.HikariProxyPreparedStatement.getUpdateCount(HikariProxyPreparedStatement.java:-1) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. PreparedStatement.close() returned   com.zaxxer.hikari.pool.ProxyStatement.close(ProxyStatement.java:75) 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@423c5404] 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@423c5404] from current transaction 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@423c5404] 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@423c5404] from current transaction 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@423c5404] 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@423c5404] 
2022-11-07 23:05:28 DEBUG [org.mybatis.spring.SqlSessionUtils] - Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@423c5404] 
2022-11-07 23:05:28 DEBUG [org.mariadb.jdbc.client.impl.StandardClient] - execute query: ROLLBACK 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.rollback() returned   com.zaxxer.hikari.pool.ProxyConnection.rollback(ProxyConnection.java:385) 
2022-11-07 23:05:28 DEBUG [org.mariadb.jdbc.client.impl.StandardClient] - execute query: set autocommit=1 
2022-11-07 23:05:28 DEBUG [org.mariadb.jdbc.message.server.OkPacket] - System variable change:  autocommit = ON 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.setAutoCommit(true) returned   com.zaxxer.hikari.pool.ProxyConnection.setAutoCommit(ProxyConnection.java:401) 
2022-11-07 23:05:28 DEBUG [jdbc.audit] - 1. Connection.clearWarnings() returned   com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:257) 
2022-11-07 23:05:28 INFO  [org.springframework.test.context.transaction.TransactionContext] - Rolled back transaction for test: [DefaultTestContext@606f81b5 testClass = BookServiceTest, testInstance = com.example.book.service.BookServiceTest@43e065f2, testMethod = getBooksTest@BookServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b21f9f testClass = BookServiceTest, locations = '{file:src/main/webapp/WEB-INF/spring/root-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]] 
2022-11-07 23:05:28 INFO  [org.springframework.test.context.transaction.TransactionContext] - Rolled back transaction for test: [DefaultTestContext@606f81b5 testClass = BookServiceTest, testInstance = com.example.book.service.BookServiceTest@43e065f2, testMethod = getBooksTest@BookServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@44b21f9f testClass = BookServiceTest, locations = '{file:src/main/webapp/WEB-INF/spring/root-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]] 
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
