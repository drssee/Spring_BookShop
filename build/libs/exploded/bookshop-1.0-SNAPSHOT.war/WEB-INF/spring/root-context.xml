<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd">

        <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
            <!--        <property name="driverClassName" value="org.mariadb.jdbc.Driver"/>-->
            <property name="driverClassName" value="${db.driver}"/>
            <property name="jdbcUrl" value="${db.url}"/>
            <property name="username" value="${db.username}"/>
            <property name="password" value="${db.password}"/>
            <property name="dataSourceProperties">
                <props>
                    <prop key="cachePrepStmts">${hikari.cachePrepStmts}</prop>
                    <prop key="prepStmtCacheSize">${hikari.prepStmtCacheSize}</prop>
                    <prop key="prepStmtCacheSqlLimit">${hikari.prepStmtCacheSqlLimit}</prop>
                </props>
            </property>
        </bean>

        <!--hikariconfig설정을 가진 datasource 빈클래스-->
        <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
            <constructor-arg ref="hikariConfig"/>
        </bean>

        <!--hikari_datasource를 가진 mybatis_sqlsessionfactory-->
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
            <property name="dataSource" ref="dataSource"/>
            <!--Mapper.xml 경로설정-->
            <property name="mapperLocations" value="classpath:/mapper/*.xml"/> <!--main/resources/mapper-->
            <!--Mapper의 설정파일 경로-->
            <property name="configLocation" value="classpath:/mapper/alias/mybatis-config.xml"/> <!--이부분입니다.-->
        </bean>
        <!--tx매니저-->
        <bean id="transactionManager"
              class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
            <property name="dataSource" ref="dataSource"/>
        </bean>

        <!--classpath:config/config.properties를 위한 플레이스홀더 빈 등록-->
        <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <property name="location" value="classpath:config/config.properties"/>
            <property name="fileEncoding" value="UTF-8" />
        </bean>

        <!--서비스 빈 등록-->
        <context:component-scan base-package="com.example.book.service"/>
        <context:component-scan base-package="com.example.orders.service"/>
        <context:component-scan base-package="com.example.user.service"/>

        <!--dao 인터페이스 위치 등록-->
        <mybatis:scan base-package="com.example.book.dao"/>
        <mybatis:scan base-package="com.example.orders.dao"/>
        <mybatis:scan base-package="com.example.user.dao"/>

        <!--플레이스홀더 설정 properties 스캔위치-->
        <context:property-placeholder location="classpath:config/*"/>
        <!--properties alias-->
        <util:properties id="config" location="classpath:config/config.properties"/>
        <!--fileIO 로직-->
        <context:component-scan base-package="com.example.common.file"/>
</beans>